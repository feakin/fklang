ContextMap TicketBooking {
  Reservation -> Cinema;
  Reservation -> Movie;
  Reservation -> User;
}

// nested
Context Reservation {
  Aggregate Reservation {
    Entity Ticket, Reservation;
  }
}

// flatten
Context Cinema {
  Aggregate Cinema;
}

Aggregate Cinema {
  Entity Cinema, ScreeningRoom, Seat;
}

Entity Cinema {}
Entity ScreeningRoom {}
Entity Seat {}

Context Movie {
  Aggregate Movie {
    Entity Movie, Actor, Publisher;
  }
}

// entity => aggregate root
Context User {
  Aggregate User {
    Struct {
      id: String;
    }
  }
}

ValueObject Price {}
ValueObject Notifications {}

layered DDD {
  dependency {
    interface -> application
    application -> domain
    interface -> domain
    application -> infrastructure
    interface -> infrastructure
  }
  layer interface {
    package: "com.example.book";
  }
  layer domain {
    package: "com.example.domain";
  }
  layer application {
    package: "com.example.application";
  }
  layer infrastructure {
    package: "com.example.infrastructure";
  }
}

impl PackageJsonGet {
  endpoint {
    GET "https://raw.githubusercontent.com/feakin/vscode-feakin/master/package.json";
  }
}

// binding;
impl UserCreated {
  endpoint {
    POST "/user/{id}";
    authorization: Basic admin admin;
    response: User;
  }

  flow {
    via UserRepository::getUserById receive user: User
    via UserRepository::save(user: User) receive user: User;
    via Kafak send User to "user.create";
  }
}

impl UserUpdated {
  endpoint {
    PUT "/user/{id}";
    request: UpdateUser;
    authorization: Basic admin admin;
    response: User;
  }
}

struct UpdateUser {
  id: UUID;
  name: String;
}

env Local {
  datasource {
    driver: postgresql
    host: "localhost"
    port: 5432
    database: "test"
  }

  server {
    port: 9090;
  }

  kafka {
    host: "localhost"
    port: 9092
  }
}

env Staging {
  datasource {
    url: "mysql://localhost:3306/test"
  }
}

/// import from PlantUml
SourceSet sourceSet {
  puml {
    parser: "PlantUML"
    srcDir: ["src/main/resources/uml"]
  }
}
