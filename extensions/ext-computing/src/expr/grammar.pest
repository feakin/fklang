program     = _{ SOI ~ expr ~ EOI }

stmt        = _{ assign | expr }
assign      = { ident ~ "=" ~ expr }
expr        = { prefix* ~ primary ~ postfix* ~ (infix ~ prefix* ~ primary ~ postfix* )* }
primary     = _{ (num ~ constants) | constants | function | variable | num | "(" ~ expr ~ ")" }
infix       = _{ sub | add | mul | div | pow | percentOf | percentOn | rightShift | leftShift | modulus }
prefix      = _{ neg }
postfix     = _{ fac }

add         = { "+" | "with" | "plus" | "add" }
sub         = { "-" | "without" | "subtract" | "minus" }
mul         = { "*" | "times" | "multiply by" | "mul" }
div         = { "/" | "divide by" | "divide" }
pow         = { "^" | "power" }
modulus     = { "%" | "mod" }

neg         =   { "-" } // Negation
fac         = { "!" } // Factorial
rightShift  = { ">>" }

leftShift   = { "<<" }
percentOf   = { "percent of" | "%" ~ "of" }
percentOn   = { "percent on" | "%" ~ "on" }

function = { ident ~ "(" ~ expr ~ ")" }

variable = _{ ident }

ident = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* ~ "'"* }
int = { ("+" | "-")? ~ ASCII_DIGIT+ }
num = @{ int ~ ("." ~ ASCII_DIGIT*)? ~ (^"e" ~ int)? }

e  = { "e" }
pi = { "pi" | "π" }
tau = { "tau" | "τ" }
constants = _{ pi | e | tau }

WHITESPACE   =  _{ " " | "\t" | NEWLINE }
